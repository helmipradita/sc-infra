---
- name: Install Node Exporter
  hosts: all_servers
  become: yes
  gather_facts: yes
  vars:
    monitoring_dir: "/opt/monitoring"
    
  tasks:
    - name: Skip if node_exporter not requested
      meta: end_host
      when: not (install_node_exporter | default(false) | bool)
      
    - name: Create monitoring directory
      file:
        path: "{{ monitoring_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
        
    - name: Stop existing node-exporter container
      raw: |
        docker stop node-exporter || true
        docker rm node-exporter || true
      become_user: "{{ ansible_user }}"
      ignore_errors: yes
      
    - name: Create Node Exporter Docker Compose file
      copy:
        content: |
          version: '3.8'
          
          services:
            node-exporter:
              image: prom/node-exporter:v1.8.2
              container_name: node-exporter
              network_mode: host
              pid: host
              volumes:
                - /proc:/host/proc:ro
                - /sys:/host/sys:ro
                - /:/rootfs:ro
              command:
                - '--path.procfs=/host/proc'
                - '--path.sysfs=/host/sys'
                - '--path.rootfs=/rootfs'
                - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
                - '--web.listen-address=0.0.0.0:9100'
              restart: unless-stopped
        dest: "{{ monitoring_dir }}/docker-compose-node-exporter.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
        
    - name: Deploy Node Exporter with Docker Compose (Ubuntu)
      raw: |
        cd {{ monitoring_dir }}
        docker compose -f docker-compose-node-exporter.yml up -d
      become_user: "{{ ansible_user }}"
      when: ansible_distribution == "Ubuntu"
      
    - name: Deploy Node Exporter with Docker run (Amazon Linux)
      raw: |
        docker run -d --name node-exporter \
          --restart=unless-stopped \
          --network host \
          --pid host \
          -v /proc:/host/proc:ro \
          -v /sys:/host/sys:ro \
          -v /:/rootfs:ro \
          prom/node-exporter:v1.8.2 \
          --path.procfs=/host/proc \
          --path.sysfs=/host/sys \
          --path.rootfs=/rootfs \
          --collector.filesystem.mount-points-exclude="^/(sys|proc|dev|host|etc)($|/)" \
          --web.listen-address=0.0.0.0:9100
      become_user: "{{ ansible_user }}"
      when: ansible_distribution == "Amazon"
      
    - name: Wait for Node Exporter to be ready
      wait_for:
        port: 9100
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 60
        
    - name: Display Node Exporter status
      debug:
        msg: "âœ… Node Exporter Docker container running on {{ inventory_hostname }} - http://{{ ansible_host }}:9100/metrics"
