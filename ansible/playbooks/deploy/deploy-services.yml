---
- name: Deploy Services Dynamically Based on Variables
  hosts: all_servers
  become: yes
  gather_facts: yes
  vars:
    monitoring_dir: "/opt/monitoring"
    
  tasks:
    # =================================
    # PACKAGE MANAGER UPDATES
    # =================================
    - name: Update package cache (Ubuntu)
      apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_distribution == "Ubuntu"
      
    - name: Update package cache (Amazon Linux)
      yum:
        update_cache: yes
      when: ansible_distribution == "Amazon"
      
    # =================================
    # NGINX INSTALLATION
    # =================================
    - name: Install Nginx (Ubuntu)
      apt:
        name: nginx
        state: present
      when: ansible_distribution == "Ubuntu" and install_nginx | default(false) | bool
      
    - name: Install Nginx (Amazon Linux)
      yum:
        name: nginx
        state: present
      when: ansible_distribution == "Amazon" and install_nginx | default(false) | bool
      
    - name: Start and enable Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes
      when: install_nginx | default(false) | bool
      

      
    # =================================
    # DOCKER-BASED SERVICES (Grafana, Prometheus, Loki, etc.)
    # =================================
    - name: Create monitoring directory
      file:
        path: "{{ monitoring_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      when: (install_grafana | default(false) | bool) or (install_prometheus | default(false) | bool) or (install_loki | default(false) | bool)
        
    - name: Copy monitoring stack configuration
      copy:
        src: "../../monitoring/"
        dest: "{{ monitoring_dir }}/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      when: (install_grafana | default(false) | bool) or (install_prometheus | default(false) | bool) or (install_loki | default(false) | bool)
        
    - name: Create dynamic Docker Compose file
      template:
        src: docker-compose-dynamic.yml.j2
        dest: "{{ monitoring_dir }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      when: (install_grafana | default(false) | bool) or (install_prometheus | default(false) | bool) or (install_loki | default(false) | bool)
        
    - name: Deploy selected monitoring services with Docker Compose
      raw: |
        cd {{ monitoring_dir }}
        docker compose up -d
      become_user: "{{ ansible_user }}"
      when: (install_grafana | default(false) | bool) or (install_prometheus | default(false) | bool) or (install_loki | default(false) | bool)
      
    # =================================
    # SERVICE VERIFICATION
    # =================================
    - name: Wait for Grafana to be ready
      wait_for:
        port: 3000
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 60
      when: install_grafana | default(false) | bool
      
    - name: Wait for Prometheus to be ready
      wait_for:
        port: 9090
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 60
      when: install_prometheus | default(false) | bool
      
    - name: Wait for Loki to be ready
      wait_for:
        port: 3100
        host: "{{ ansible_default_ipv4.address }}"
        delay: 10
        timeout: 60
      when: install_loki | default(false) | bool
      

      
    # =================================
    # DEPLOYMENT SUMMARY
    # =================================
    - name: Display deployment status for each host
      debug:
        msg: |
          üéâ DEPLOYMENT COMPLETED FOR {{ inventory_hostname }}!
          =================================================
          
          üñ•Ô∏è  Server: {{ ansible_host }} ({{ ansible_distribution }})
          
          üìã Services Deployed:
          {% if install_nginx | default(false) | bool %}   ‚úÖ Nginx (port 80/443){% endif %}
          {% if install_grafana | default(false) | bool %}   ‚úÖ Grafana (port 3000) - http://{{ ansible_host }}:3000{% endif %}
          {% if install_prometheus | default(false) | bool %}   ‚úÖ Prometheus (port 9090) - http://{{ ansible_host }}:9090{% endif %}
          {% if install_loki | default(false) | bool %}   ‚úÖ Loki (port 3100) - http://{{ ansible_host }}:3100{% endif %}
          {% if install_promtail | default(false) | bool %}   ‚úÖ Promtail{% endif %}

          {% if install_postgres_exporter | default(false) | bool %}   ‚úÖ PostgreSQL Exporter (port 9187){% endif %}
          
          {% if not (install_nginx | default(false) | bool or install_grafana | default(false) | bool or install_prometheus | default(false) | bool or install_loki | default(false) | bool or install_promtail | default(false) | bool or install_postgres_exporter | default(false) | bool) %}   ‚ÑπÔ∏è  No services configured for installation on this host{% endif %}