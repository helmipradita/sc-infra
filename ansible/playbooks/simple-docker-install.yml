---
- name: Simple Docker Installation using Raw Commands
  hosts: monitoring
  gather_facts: no
  tasks:
    - name: Check current Docker status
      raw: |
        echo "=== Checking Docker on $(hostname) ==="
        echo "OS: $(cat /etc/os-release | grep PRETTY_NAME)"
        echo "User: $(whoami)"
        echo ""
        echo "Docker version check:"
        if command -v docker &> /dev/null; then
          docker --version
          echo "‚úÖ Docker is installed"
        else
          echo "‚ùå Docker is NOT installed"
        fi
        echo ""
        echo "Docker Compose version check:"
        if command -v docker &> /dev/null && docker compose version &> /dev/null; then
          docker compose version
          echo "‚úÖ Docker Compose is installed"
        elif command -v docker-compose &> /dev/null; then
          docker-compose --version
          echo "‚úÖ Docker Compose (legacy) is installed"
        else
          echo "‚ùå Docker Compose is NOT installed"
        fi
        echo "================================"
      register: docker_status

    - name: Display Docker status
      debug:
        var: docker_status.stdout_lines

    - name: Install Docker on Ubuntu servers
      raw: |
        if [ -f /etc/debian_version ]; then
          echo "Installing Docker on Ubuntu..."
          sudo apt update
          sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker $USER
          echo "‚úÖ Docker installation completed on Ubuntu"
        else
          echo "‚è≠Ô∏è Skipping Ubuntu installation (not Ubuntu system)"
        fi
      when: ansible_connection == 'ssh'
      register: ubuntu_install

    - name: Install Docker on Amazon Linux servers  
      raw: |
        if [ -f /etc/amazon-linux-release ] || grep -q "Amazon Linux" /etc/os-release 2>/dev/null; then
          echo "Installing Docker on Amazon Linux..."
          sudo yum update -y
          sudo yum install -y docker
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -a -G docker $USER
          
          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose
          echo "‚úÖ Docker installation completed on Amazon Linux"
        else
          echo "‚è≠Ô∏è Skipping Amazon Linux installation (not Amazon Linux system)"
        fi
      when: ansible_connection == 'ssh'
      register: amazon_install

    - name: Display installation results
      debug:
        msg: |
          Ubuntu installation: {{ ubuntu_install.stdout_lines | default(['Not executed']) }}
          Amazon installation: {{ amazon_install.stdout_lines | default(['Not executed']) }}

    - name: Final verification
      raw: |
        echo "=== FINAL VERIFICATION ==="
        echo "Hostname: $(hostname)"
        echo ""
        if command -v docker &> /dev/null; then
          echo "‚úÖ Docker: $(docker --version)"
        else
          echo "‚ùå Docker: Not available"
        fi
        
        if command -v docker &> /dev/null && docker compose version &> /dev/null; then
          echo "‚úÖ Docker Compose: $(docker compose version --short)"
        elif command -v docker-compose &> /dev/null; then
          echo "‚úÖ Docker Compose: $(docker-compose --version)"
        else
          echo "‚ùå Docker Compose: Not available"
        fi
        
        echo ""
        echo "Docker service status:"
        sudo systemctl is-active docker || echo "Docker service not running"
        echo "=========================="
      register: final_check

    - name: Display final status
      debug:
        var: final_check.stdout_lines

- name: Installation Summary
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Display overall summary
      debug:
        msg: |
          üéâ DOCKER INSTALLATION SUMMARY
          ==============================
          ‚úÖ Installation process completed on all servers
          ‚úÖ Please run verification playbook to confirm installation
          
          Next steps:
          1. Log out and log back in to apply docker group changes
          2. Test with: docker run hello-world
          3. Verify with: ansible-playbook -i inventory.ini playbooks/verify-docker.yml